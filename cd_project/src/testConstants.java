/* Generated By:JavaCC: Do not edit this line. testConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface testConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 7;
  /** RegularExpression Id. */
  int MINUS = 8;
  /** RegularExpression Id. */
  int MULTIPLY = 9;
  /** RegularExpression Id. */
  int DIVIDE = 10;
  /** RegularExpression Id. */
  int R = 11;
  /** RegularExpression Id. */
  int PLUSASSIGN = 12;
  /** RegularExpression Id. */
  int MINUSASSIGN = 13;
  /** RegularExpression Id. */
  int STARASSIGN = 14;
  /** RegularExpression Id. */
  int SLASHASSIGN = 15;
  /** RegularExpression Id. */
  int REMASSIGN = 16;
  /** RegularExpression Id. */
  int EQ = 17;
  /** RegularExpression Id. */
  int LE = 18;
  /** RegularExpression Id. */
  int GE = 19;
  /** RegularExpression Id. */
  int NE = 20;
  /** RegularExpression Id. */
  int LT = 21;
  /** RegularExpression Id. */
  int BANG = 22;
  /** RegularExpression Id. */
  int GT = 23;
  /** RegularExpression Id. */
  int LPAREN = 24;
  /** RegularExpression Id. */
  int RPAREN = 25;
  /** RegularExpression Id. */
  int COMMA = 26;
  /** RegularExpression Id. */
  int DOT = 27;
  /** RegularExpression Id. */
  int LBRACE = 28;
  /** RegularExpression Id. */
  int RBRACE = 29;
  /** RegularExpression Id. */
  int LBRACKET = 30;
  /** RegularExpression Id. */
  int RBRACKET = 31;
  /** RegularExpression Id. */
  int HASH = 32;
  /** RegularExpression Id. */
  int DO = 33;
  /** RegularExpression Id. */
  int BREAK = 34;
  /** RegularExpression Id. */
  int LOOP = 35;
  /** RegularExpression Id. */
  int INPUT = 36;
  /** RegularExpression Id. */
  int TRUE = 37;
  /** RegularExpression Id. */
  int FALSE = 38;
  /** RegularExpression Id. */
  int CASE = 39;
  /** RegularExpression Id. */
  int END = 40;
  /** RegularExpression Id. */
  int ELSE = 41;
  /** RegularExpression Id. */
  int WHEN = 42;
  /** RegularExpression Id. */
  int IN = 43;
  /** RegularExpression Id. */
  int LEN = 44;
  /** RegularExpression Id. */
  int DEF = 45;
  /** RegularExpression Id. */
  int RETURN = 46;
  /** RegularExpression Id. */
  int IF = 47;
  /** RegularExpression Id. */
  int ELSIF = 48;
  /** RegularExpression Id. */
  int FOR = 49;
  /** RegularExpression Id. */
  int NEXT = 50;
  /** RegularExpression Id. */
  int WHILE = 51;
  /** RegularExpression Id. */
  int AND = 52;
  /** RegularExpression Id. */
  int OR = 53;
  /** RegularExpression Id. */
  int PRINT = 54;
  /** RegularExpression Id. */
  int DIGIT = 55;
  /** RegularExpression Id. */
  int CHAR = 56;
  /** RegularExpression Id. */
  int ID = 57;
  /** RegularExpression Id. */
  int ASSIGN = 58;
  /** RegularExpression Id. */
  int E = 59;
  /** RegularExpression Id. */
  int INT = 60;
  /** RegularExpression Id. */
  int DOUBLE = 61;
  /** RegularExpression Id. */
  int STRING = 62;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\n\"",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"<\"",
    "\"!\"",
    "\">\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\".\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"#\"",
    "\"do\"",
    "\"break\"",
    "\"loop\"",
    "\"gets\"",
    "\"true\"",
    "\"false\"",
    "\"case\"",
    "\"end\"",
    "\"else\"",
    "\"when\"",
    "\"in\"",
    "\"length\"",
    "\"def\"",
    "\"return\"",
    "\"if\"",
    "\"elsif\"",
    "\"for\"",
    "\"next\"",
    "\"while\"",
    "\"and\"",
    "\"or\"",
    "\"puts\"",
    "<DIGIT>",
    "<CHAR>",
    "<ID>",
    "\"=\"",
    "\"E\"",
    "<INT>",
    "<DOUBLE>",
    "<STRING>",
  };

}
